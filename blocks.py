from web3 import Web3
from web3.middleware import geth_poa_middleware
import datetime
l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
a = [33773135, 33773195, 33773255, 33773315, 33773375, 33773435, 33773495, 33773555, 33773615, 33773675, 33773735, 33773795, 33773855, 33773915, 33773975, 33774035, 33774095, 33774155, 33774215, 33774275, 33774335, 33774395, 33774455, 33774515, 33774575, 33774635, 33774695, 33774755, 33774815, 33774875, 33774935, 33774995, 33775055, 33775115, 33775175, 33775235, 33775295, 33775355, 33775415, 33775475, 33775535, 33775595, 33775655, 33775715, 33775775, 33775835, 33775895, 33775955, 33776015, 33776075, 33776135, 33776195, 33776255, 33776315, 33776375, 33776435, 33776495, 33776555, 33776615, 33776675, 33776735, 33776795, 33776855, 33776915, 33776975, 33777035, 33777095, 33777155, 33777215, 33777275, 33777335, 33777395, 33777455, 33777515, 33777575, 33777635, 33777695, 33777755, 33777815, 33777875, 33777935, 33777995, 33778055, 33778115, 33778175, 33778235, 33778295, 33778355, 33778415, 33778475, 33778535, 33778595, 33778655, 33778715, 33778775, 33778835, 33778895, 33778955, 33779015, 33779075, 33779135, 33779195, 33779255, 33779315, 33779375, 33779435, 33779495, 33779555, 33779615, 33779675, 33779735, 33779795, 33779855, 33779915, 33779975, 33780035, 33780095, 33780155, 33780215, 33780275, 33780335, 33780395, 33780455, 33780515, 33780575, 33780635, 33780695, 33780755, 33780815, 33780875, 33780935, 33780995, 33781055, 33781115, 33781175, 33781235, 33781295, 33781355, 33781415, 33781475, 33781535, 33781595, 33781655, 33781715, 33781775, 33781835, 33781895, 33781955, 33782015, 33782075, 33782135, 33782195, 33782255, 33782315, 33782375, 33782435, 33782495, 33782555, 33782615, 33782675, 33782735, 33782795, 33782855, 33782915, 33782975, 33783035, 33783095, 33783155, 33783215, 33783275, 33783335, 33783395, 33783455, 33783515, 33783575, 33783635, 33783695, 33783755, 33783815, 33783875, 33783935, 33783995, 33784055, 33784115, 33784175, 33784235, 33784295, 33784355, 33784415, 33784475, 33784535, 33784595, 33784655, 33784715, 33784775, 33784835, 33784895, 33784955, 33785015, 33785075, 33785135, 33785195, 33785255, 33785315, 33785375, 33785435, 33785495, 33785555, 33785615, 33785675, 33785735, 33785795, 33785855, 33785915, 33785975, 33786035, 33786095, 33786155, 33786215, 33786275, 33786335, 33786395, 33786455, 33786515, 33786575, 33786635, 33786695, 33786755, 33786815, 33786875, 33786935, 33786995, 33787055, 33787115, 33787175, 33787235, 33787295, 33787355, 33787415, 33787475, 33787535, 33787595, 33787655, 33787715, 33787775, 33787835, 33787895, 33787955, 33788015, 33788075, 33788135, 33788195, 33788255, 33788315, 33788375, 33788435, 33788495, 33788555, 33788615, 33788675, 33788735, 33788795, 33788855, 33788915, 33788975, 33789035, 33789095, 33789155, 33789215, 33789275, 33789335, 33789395, 33789455, 33789515, 33789575, 33789635, 33789695, 33789755, 33789815, 33789875, 33789935, 33789995, 33790055, 33790115, 33790175, 33790235, 33790295, 33790355, 33790415, 33790475, 33790535, 33790595, 33790655, 33790715, 33790775, 33790835, 33790895, 33790955, 33791015, 33791075, 33791135, 33791195, 33791255, 33791315, 33791375, 33791435, 33791495, 33791555, 33791615, 33791675, 33791735, 33791795, 33791855, 33791915, 33791975, 33792035, 33792095, 33792155, 33792215, 33792275, 33792335, 33792395, 33792455, 33792515, 33792575, 33792635, 33792695, 33792755, 33792815, 33792875, 33792935, 33792995, 33793055, 33793115, 33793175, 33793235, 33793295, 33793355, 33793415, 33793475, 33793535, 33793595, 33793655, 33793715, 33793775, 33793835, 33793895, 33793955, 33794015, 33794075, 33794135, 33794195, 33794255, 33794315, 33794375, 33794435, 33794495, 33794555, 33794615, 33794675, 33794735, 33794795, 33794855, 33794915, 33794975, 33795035, 33795095, 33795155, 33795215, 33795275, 33795335, 33795395, 33795455, 33795515, 33795575, 33795635, 33795695, 33795755, 33795815, 33795875, 33795935, 33795995, 33796055, 33796115, 33796175, 33796235, 33796295, 33796355, 33796415, 33796475, 33796535, 33796595, 33796655, 33796715, 33796775, 33796835, 33796895, 33796955, 33797015, 33797075, 33797135, 33797195, 33797255, 33797315, 33797375, 33797435, 33797495, 33797555, 33797615, 33797675, 33797735, 33797795, 33797855, 33797915, 33797975, 33798035, 33798095, 33798155, 33798215, 33798275, 33798335, 33798395, 33798455, 33798515, 33798575, 33798635, 33798695, 33798755, 33798815, 33798875, 33798935, 33798995, 33799055, 33799115, 33799175, 33799235, 33799295, 33799355, 33799415, 33799475, 33799535, 33799595, 33799655, 33799715, 33799775, 33799835, 33799895, 33799955, 33800015, 33800075, 33800135, 33800195, 33800255, 33800315, 33800375, 33800435, 33800495, 33800555, 33800615, 33800675, 33800735, 33800795, 33800855, 33800915, 33800975, 33801035, 33801095]

fee = 0.01 / 100

web3 = Web3(Web3.HTTPProvider('https://rpc.ankr.com/bsc'))
web3.middleware_onion.inject(geth_poa_middleware, layer=0)
i = 1
s = 0
b = 0
tick = l[0]
tickMin = tick
tickMax = tick + 1
for i in range(len(a)):
    if l[i] < tickMin:
        s += 1
        i += 1
        tick = l[i]
        tickMin = tick
        tickMax = tick + 1
        block_number = a[i]
#        block = web3.eth.get_block(block_number)
#        timestampBlock = web3.eth.get_block(block_number)['timestamp']
#        dt_object = datetime.datetime.fromtimestamp(timestampBlock)
#        transaction_hash = block['transactions'][-1]

#        transaction = web3.eth.get_transaction(transaction_hash)
#        gas_price = transaction['gasPrice'] * 650000
#        gas = web3.from_wei(transaction['gasPrice'], 'gwei')
#        base_gas_price = web3.from_wei(gas_price, 'ether')
#        b += base_gas_price
#        print("Block:",a[i]," Tick:",l[i]," Total gas:",round(base_gas_price, 6)," Gwei:",round(gas))
        print("Block:", a[i], " Tick:", l[i])
    elif l[i] >= tickMax:
            s += 1
            i += 1
            tick = l[i]
            tickMin = tick
            tickMax = tick + 1
            block_number = a[i]
            #        block = web3.eth.get_block(block_number)
            #        timestampBlock = web3.eth.get_block(block_number)['timestamp']
            #        dt_object = datetime.datetime.fromtimestamp(timestampBlock)
            #        transaction_hash = block['transactions'][-1]

            #        transaction = web3.eth.get_transaction(transaction_hash)
            #        gas_price = transaction['gasPrice'] * 650000
            #        gas = web3.from_wei(transaction['gasPrice'], 'gwei')
            #        base_gas_price = web3.from_wei(gas_price, 'ether')
            #        b += base_gas_price
            #        print("Block:",a[i]," Tick:",l[i]," Total gas:",round(base_gas_price, 6)," Gwei:",round(gas))
            print("Block:", a[i], " Tick:", l[i])
    else:
        i +=1
print("Quantity: ", s)
print("Native: ", b)
print("Fee: ", s * (2000 * fee))
